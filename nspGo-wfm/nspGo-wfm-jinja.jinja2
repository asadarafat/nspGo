func (rConf *RestConf) NspRestconfInventory(urlHost string, token string, proxyEnable string, proxyAddress string, urlPath string, payload []byte) (result string) {
	client := resty.New()
	client.SetTimeout(6000 * time.Second)
	client.SetTLSClientConfig(&tls.Config{InsecureSkipVerify: true})
	if proxyEnable == "true" {
		client.SetProxy(proxyAddress)
	}

	//asycn == false
	url := ("https://" + urlHost + nspgoconstants.GLBL_NSP_RESTCONF_BASE_URL + urlPath)
	resp, err := client.R().
		SetHeader("Accept", "application/yang-data+json").
		SetHeader("Content-Type", "application/yang-patch+json").
		SetHeader("authorization", "Bearer "+token).
		SetBody(payload).
		Post(url)

	// log.Info("NspRestconfInventory Response: ", resp.String())
	// fmt.Println(result)
	if err != nil {
		log.Error("NspRestconfInventory is unsuccesful: ", err)
		return
	}
	return resp.String()

}